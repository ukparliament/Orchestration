{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceBusName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus."
      }
    },
    "azureFunctionsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Functions."
      }
    },
    "operationsResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource Group where diagnostics storage is."
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the diagnostics storage account."
      }
    },
    "releaseId": {
      "type": "int",
      "metadata": {
        "description": "The identifier of the current release record."
      }
    }
  },
  "variables": {
    "sharepointConnectionName": "sharepoint",
    "logicAppsSetting_name": "departmentmnis"
  },
  "resources": [
    {
      "comments": "Logic App that obtains list of Departments from MNIS.",
      "type": "Microsoft.Logic/workflows",
      "name": "[concat('getlist-',variables('logicAppsSetting_name'))]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ReleaseId": "[parameters('releaseId')]"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Condition": {
                  "actions": {
                    "Send_message": {
                      "inputs": {
                        "body": {
                          "Properties": {
                            "batchId": "@triggerOutputs()['headers']['x-ms-client-request-id']",
                            "url": "@{items('For_each')?['ID']}"
                          }
                        },
                        "host": {
                          "api": {
                            "runtimeUrl": "[concat('https://logic-apis-',resourceGroup().location,'.azure-apim.net/apim/servicebus')]"
                          },
                          "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "[concat('/',variables('logicAppsSetting_name'),'/messages')]",
                        "retryPolicy": {
                          "count": 2,
                          "interval": "PT20S",
                          "type": "fixed"
                        }
                      },
                      "runAfter": {},
                      "type": "ApiConnection"
                    }
                  },
                  "expression": "@not(contains(xpath(xml(json(concat('{\"root\":{\"item\":', body('Get_items').value, '}}'))), '/root/item/mnisID/text()'), item().content['m:properties']['d:Department_Id']['#text']))",
                  "runAfter": {},
                  "type": "If"
                }
              },
              "foreach": "@json(body('Get_List')).feed.entry",
              "runAfter": {
                "Get_list": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_items": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://hopuk.sharepoint.com/sites/datateam/datasources'))}/tables/@{encodeURIComponent(encodeURIComponent('bd0af932-b804-46f6-920d-9d6fd7503e93'))}/items",
                "queries": {
                  "$top": 10000
                }
              },
              "runAfter": {
                "Response": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            },
            "Get_list": {
              "inputs": {
                "headers": {
                  "Accept": "application/atom+xml"
                },
                "method": "GET",
                "uri": "http://data.parliament.uk/MembersDataPlatform/open/OData.svc/Departments?$select=Department_Id"
              },
              "runAfter": {
                "Get_items": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "LogicAppsErrorMessageLog": {
              "inputs": {
                "body": {
                  "action": "@actions('Get_items')",
                  "batchId": "@triggerOutputs()['headers']['x-ms-client-request-id']",
                  "workflow": "@workflow()"
                },
                "function": {
                  "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/LogicAppsErrorMessageLog')]"
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "Get_items": [
                  "Failed"
                ]
              },
              "type": "Function"
            },
            "LogicAppsErrorMessageLog2": {
              "inputs": {
                "body": {
                  "action": "@actions('Get_list')",
                  "batchId": "@triggerOutputs()['headers']['x-ms-client-request-id']",
                  "workflow": "@workflow()"
                },
                "function": {
                  "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/LogicAppsErrorMessageLog')]"
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "Get_list": [
                  "Failed"
                ]
              },
              "type": "Function"
            },
            "Response": {
              "inputs": {
                "headers": {
                  "batchId": "@triggerOutputs()['headers']['x-ms-client-request-id']"
                },
                "statusCode": 202
              },
              "runAfter": {
              },
              "type": "Response"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "connectionId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/',parameters('serviceBusName'))]",
                "connectionName": "[parameters('serviceBusName')]",
                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/servicebus')]"
              },
              "sharepointonline": {
                "connectionId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/',variables('sharepointConnectionName'))]",
                "connectionName": "[variables('sharepointConnectionName')]",
                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/sharepointonline')]"
              }
            }
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/workflow",
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/','getlist-',variables('logicAppsSetting_name'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "Microsoft.Insights/workflow",
            "storageAccountId": "[resourceId(subscription().subscriptionId,parameters('operationsResourceGroupName'),'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "dependsOn": []
    }
  ]
}