{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureFunctionsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Functions."
      }
    },
    "serviceBusName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus."
      }
    },
    "operationsResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource Group where diagnostics storage is."
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the diagnostics storage account."
      }
    },
    "releaseId": {
      "type": "int",
      "metadata": {
        "description": "The identifier of the current release record."
      }
    }
  },
  "variables": {
    "logicAppsSetting_name": "epetition"
  },
  "resources": [
    {
      "comments": "Logic App that obtains list of e-petitions.",
      "type": "Microsoft.Logic/workflows",
      "name": "[concat('getlistpage-',variables('logicAppsSetting_name'))]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ReleaseId": "[parameters('releaseId')]"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {
                  "properties": {
                    "batchId": {
                      "type": "string"
                    },
                    "maxUpdatedAt": {
                      "type": "string"
                    },
                    "pageNo": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "pageNo",
                    "batchId",
                    "maxUpdatedAt"
                  ],
                  "type": "object"
                }
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "actions": {
            "Response": {
              "inputs": {
                "headers": {
                  "batchId": "@triggerBody()['batchId']"
                },
                "statusCode": 202
              },
              "runAfter": {
              },
              "type": "Response"
            },
            "LogicAppsErrorMessageLog": {
              "inputs": {
                "body": {
                  "action": "@actions('Get_List')",
                  "workflow": "@workflow()",
                  "batchId": "@triggerBody()['batchId']"
                },
                "function": {
                  "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/LogicAppsErrorMessageLog')]"
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "Get_List": [
                  "Failed"
                ]
              },
              "type": "Function"
            },
            "For_each": {
              "foreach": "@body('Get_List').data",
              "actions": {
                "Condition": {
                  "actions": {
                    "Send_message": {
                      "inputs": {
                        "body": {
                          "Properties": {
                            "batchId": "@triggerBody()['batchId']",
                            "url": "@item().links.self"
                          }
                        },
                        "host": {
                          "api": {
                            "runtimeUrl": "[concat('https://logic-apis-',resourceGroup().location,'.azure-apim.net/apim/servicebus')]"
                          },
                          "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "[concat('/',variables('logicAppsSetting_name'),'/messages')]",
                        "retryPolicy": {
                          "count": 2,
                          "interval": "PT20S",
                          "type": "Fixed"
                        }
                      },
                      "runAfter": {},
                      "type": "ApiConnection"
                    }
                  },
                  "expression": "@greater(ticks(item()['attributes']['updated_at']), ticks(triggerBody()['maxUpdatedAt']))",
                  "runAfter": {},
                  "type": "If"
                }
              },              
              "runAfter": {
                "Get_List": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_List": {
              "inputs": {
                "headers": {
                  "Accept": "application/json"
                },
                "method": "GET",
                "retryPolicy": {
                  "count": 2,
                  "interval": "PT20S",
                  "type": "Fixed"
                },
                "uri": "https://petition.parliament.uk/petitions?page=@{triggerBody()['pageNo']}"
              },
              "runAfter": {
                "Response": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "connectionId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/',parameters('serviceBusName'))]",
                "connectionName": "[parameters('serviceBusName')]",
                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/servicebus')]"
              }
            }
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/workflow",
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/','getlistpage-',variables('logicAppsSetting_name'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "Microsoft.Insights/workflow",
            "storageAccountId": "[resourceId(subscription().subscriptionId,parameters('operationsResourceGroupName'),'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "dependsOn": []
    }
  ]
}