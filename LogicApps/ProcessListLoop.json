{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "base64Settings": {
      "type": "string",
      "metadata": {
        "description": "Base64 (UTF-8) encoded array of settings."
      }
    },
    "azureFunctionsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Functions."
      }
    },
    "serviceBusName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus."
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the diagnostics storage account."
      }
    },
    "releaseId": {
      "type": "int",
      "metadata": {
        "description": "The identifier of the current release record."
      }
    }
  },
  "variables": {
    "logicAppsSettings": "[base64ToJson(parameters('base64Settings'))]"
  },
  "resources": [
    {
      "comments": "Logic App that iterates through the messages inside the Service Bus queue.",
      "type": "Microsoft.Logic/workflows",
      "copy": {
        "name": "workflowcopy",
        "count": "[length(variables('logicAppsSettings'))]"
      },
      "name": "[concat('processlist-',variables('logicAppsSettings')[copyIndex()].name)]",
      "apiVersion": "2016-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ReleaseId": "[parameters('releaseId')]"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Complete_the_message_in_a_queue": {
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                      }
                    },
                    "method": "delete",
                    "path": "[concat('/',variables('logicAppsSettings')[copyIndex()].name,'/messages/complete')]",
                    "queries": {
                      "lockToken": "@items('For_each')?['LockToken']",
                      "queueType": "Main"
                    }
                  },
                  "runAfter": {},
                  "type": "ApiConnection"
                },
                "HTTP_Webhook": {
                  "inputs": {
                    "subscribe": {
                      "body": {
                        "batchId": "@items('For_each')?['Properties']?['batchId']",
                        "workflowId": "@workflow()?['run']?['name']",
                        "callbackUrl": "@listCallbackUrl()",
                        "url": "@items('For_each')?['Properties']?['url']"
                      },
                      "method": "POST",
                      "uri": "[listsecrets(concat(resourceId('Microsoft.Web/sites',parameters('azureFunctionsName')),concat('/functions/Transformation',variables('logicAppsSettings')[copyIndex()].name)),'2015-08-01').trigger_url]"
                    },
                    "unsubscribe": {}
                  },
                  "limit": {
                    "timeout": "PT5M"
                  },
                  "runAfter": {
                    "Complete_the_message_in_a_queue": [
                      "Succeeded"
                    ]
                  },
                  "type": "HttpWebhook"
                },
                "On_error": {
                  "actions": {
                    "LogicAppsErrorMessageLog": {
                      "inputs": {
                        "body": {
                          "action": "@actions('HTTP_Webhook')",
                          "workflow": "@workflow()"
                        },
                        "function": {
                          "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/LogicAppsErrorMessageLog')]"
                        },
                        "retryPolicy": {
                          "type": "none"
                        }
                      },
                      "runAfter": {},
                      "type": "Function"
                    },
                    "Send_message": {
                      "inputs": {
                        "body": {
                          "Properties": "@items('For_each')?['Properties']"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "[concat('/',variables('logicAppsSettings')[copyIndex()].name,'/messages')]",
                        "queries": {
                          "systemProperties": "None"
                        }
                      },
                      "runAfter": {
                        "LogicAppsErrorMessageLog": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "runAfter": {
                    "HTTP_Webhook": [
                      "Failed"
                    ]
                  },
                  "type": "Scope"
                }
              },
              "foreach": "@body('Get_messages_from_a_queue_(peek-lock)')",
              "runAfter": {
                "Get_messages_from_a_queue_(peek-lock)": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_messages_from_a_queue_(peek-lock)": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[concat('/',variables('logicAppsSettings')[copyIndex()].name,'/messages/batch/peek')]",
                "queries": {
                  "maxMessageCount": "[variables('logicAppsSettings')[copyIndex()].queueReadBatchSize]",
                  "queueType": "Main"
                }
              },
              "runAfter": {},
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "[variables('logicAppsSettings')[copyIndex()].queueReadFrequency]",
                "interval": "[variables('logicAppsSettings')[copyIndex()].queueReadInterval]"
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "connectionId": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/',parameters('serviceBusName'))]",
                "connectionName": "[parameters('serviceBusName')]",
                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/servicebus')]"
              }
            }
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/workflow",
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/',variables('logicAppsSettings')[copyIndex()].name)]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "Microsoft.Insights/workflow",
            "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "dependsOn": []
    }
  ]
}