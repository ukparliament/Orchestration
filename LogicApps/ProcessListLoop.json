{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppsSetting_name": {
            "type": "array",
            "metadata": {
                "description": "Names for Service Bus queues/workflows."
            }
        },
        "logicAppsSetting_queueReadBatchSize": {
            "type": "array",
            "metadata": {
                "description": "Number of messages to be read from the Service Bus queues."
            }
        },
        "azureFunctionsName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Functions."
            }
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Name of the environment that is being deployed to."
            }
        },
        "releaseId": {
            "type": "int",
            "metadata": {
                "description": "The identifier of the current release record."
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "Logic App that iterates through the messages inside the Service Bus queue.",
            "type": "Microsoft.Logic/workflows",
            "copy": {
                "name": "workflowcopy",
                "count": "[length(parameters('logicAppsSetting_name'))]"
            },
            "name": "[concat('processlist-',parameters('logicAppsSetting_name')[copyIndex()])]",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "34a4fc9c-8817-4c95-8e1b-76e27fbe2699": "f009d98d-028e-48bc-af57-944f3dd9a77c",
                "Department": "Data & Search",
                "Environment": "[parameters('environment')]",
                "ReleaseId": "[parameters('releaseId')]",
                "Type": "Logic App"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Condition": {
                            "actions": {
                                "For_each": {
                                    "actions": {
                                        "TransformAndUpdate": {
                                            "inputs": {
                                                "body": {
                                                    "message": "@item()"
                                                },
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Logic/workflows/update-',parameters('logicAppsSetting_name')[copyIndex()])]"
                                                    }
                                                },
                                                "retryPolicy": {
                                                    "type": "None"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Workflow"
                                        }
                                    },
                                    "foreach": "@body('QueueMessagesRetrieval')",
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "expression": "@equals(outputs('QueueMessagesRetrieval')['statusCode'], 200)",
                            "runAfter": {
                                "QueueMessagesRetrieval": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "LogicAppsErrorMessageLog": {
                            "inputs": {
                                "body": {
                                    "action": "@actions('QueueMessagesRetrieval')",
                                    "workflow": "@workflow()"
                                },
                              "function": {
                                "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/LogicAppsErrorMessageLog')]"
                              },
                                "retryPolicy": {
                                    "type": "None"
                                }
                            },
                            "runAfter": {
                                "QueueMessagesRetrieval": [
                                    "Failed"
                                ]
                            },
                            "type": "Function"
                        },
                        "QueueMessagesRetrieval": {
                            "inputs": {
                                "body": {
                                    "batchSize": "[parameters('logicAppsSetting_queueReadBatchSize')[copyIndex()]]",
                                    "queue": "[parameters('logicAppsSetting_name')[copyIndex()]]"
                                },
                              "function": {
                                "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/sites/',parameters('azureFunctionsName'),'/functions/QueueMessagesRetrieval')]"
                              },
                                "retryPolicy": {
                                    "type": "None"
                                }
                            },
                            "runAfter": {},
                            "type": "Function"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    }
                }
            },
            "resources": [],
            "dependsOn": []
        }
    ]
}